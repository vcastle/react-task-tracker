{"version":3,"sources":["firebase.config.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","isComplete","onDoubleClick","cursor","reps","Tasks","tasks","map","index","AddTask","useState","setText","setReps","setComplete","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","Footer","Date","getFullYear","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","docs","forEach","item","t","data","getTasks","res","collection","orderBy","get","addTask","add","then","console","log","catch","error","deleteTask","x","id","doc","delete","filter","toggleReminder","currentTask","update","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6c41bf9.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA4zqFOnUPGkkD2UZ_4ARXk54rjSjstQbQ\",\n    authDomain: \"exercise-tracker-react.firebaseapp.com\",\n    projectId: \"exercise-tracker-react\",\n    storageBucket: \"exercise-tracker-react.appspot.com\",\n    messagingSenderId: \"818572245470\",\n    appId: \"1:818572245470:web:945650fa7b79bbbbc8454f\",\n    measurementId: \"G-2P08VTFSML\"\n  };\n  \nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nexport default db;","import PropTypes from 'prop-types';\n\nconst Button = ({ color, text, onClick }) => {\n\n  return (\n    <button onClick={onClick} style={{ backgroundColor: color }} className=\"btn\">\n      {text}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  color: \"steelblue\",\n};\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n  };\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nimport Button from './Button';\n\nconst Header = ({title, onAdd, showAdd }) => {\n  const location = useLocation();\n\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n\n            {location.pathname === '/react-task-tracker/' &&\n               <Button \n                color={showAdd ? 'crimson' : '#009957'} \n                text={showAdd ? 'Close' : 'Add'} \n                onClick={onAdd} />\n            }\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Exercise Tasks',\n  }\n  \n  Header.propTypes = {\n    title: PropTypes.string.isRequired,\n  }\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa';\n\nconst Task = ({task, onDelete, onToggle }) => {\n    return (\n        <div \n            title=\"Double tap to toggle task status\"\n            className={`task ${task.isComplete ? 'isComplete' : ''}`} \n            onDoubleClick={() => onToggle(task)}\n        >\n            <h3>\n                {task.text} \n                <FaTimes \n                    style={{ color: 'red', cursor: 'pointer'}} \n                    onClick={() => onDelete(task)}\n                />\n            </h3>\n            <p>{task.reps}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task';\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n   \n  return (\n    <>\n        {tasks.map((task, index) => (\n            <Task \n                key={index} \n                task={task} \n                onDelete={onDelete}\n                onToggle={onToggle}\n            />\n        ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import { useState } from 'react';\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('');\n    const [reps, setReps] = useState('');\n    const [isComplete, setComplete] = useState(false);\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if(!text) {\n            alert('Please add task');\n            return;\n        }\n\n        onAdd({ text, reps, isComplete});\n\n        setText('');\n        setReps('');\n        setComplete(false);\n    }\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input \n                    type='text' \n                    placeholder='Sumo Deadlifts' \n                    value={text}\n                    onChange={(e) => setText(e.target.value)}/>\n            </div>\n            <div className='form-control'>\n                <label>Reps & Sets</label>\n                <input \n                    type='text' \n                    placeholder='3 x 15' \n                    value={reps}\n                    onChange={(e) => setReps(e.target.value)}/>\n            </div>\n\n            <input \n                type='submit' \n                value='Save Task' \n                className='btn btn-block'/>\n        </form>\n    )\n}\n\nexport default AddTask\n","import { Link } from 'react-router-dom';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p>Copyright &copy; {new Date().getFullYear()} - Valeria Castillo</p>\n            <Link to=\"/react-task-tracker/about\">About</Link>\n        </footer>\n    )\n}\n\nexport default Footer\n","import { Link } from 'react-router-dom';\n\nconst About = () => {\n    return (\n        <div>\n            <h4>Version 1.0.0</h4>\n            <Link to=\"/react-task-tracker/\">Go Back</Link>\n        </div>\n    )\n}\n\nexport default About\n","import db from './firebase.config';\n\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  // initial load\n  useEffect(() => {\n   const getTasks = async () => {\n     const tasksFromServer = await fetchTasks();\n\n     tasksFromServer.docs.forEach(item => {\n      setTasks(t => ([...t, item.data()]));\n     })\n   }\n\n    getTasks();\n  }, []);\n\n  /** Server Calls */\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = db.collection('tasks').orderBy('isComplete', 'asc');\n    const data = await res.get();\n  \n    return data;\n  };\n\n  // Add Task\n  const addTask = (task) => {\n\tdb.collection('tasks')\n\t.add(task)\n\t.then(() => {\n\t\tconsole.log('Task Added Successfully');\n\t})\n\t.catch((error) => {\n\t\tconsole.error('Error adding task: ', error);\n\t});\n\n\t// update tasks state\n\tsetTasks([...tasks, task]);\n  }\n\n  // Delete Task\n  const deleteTask = (task) => {\n    // get id of task\n    db.collection('tasks').get().then((x) => {\n      x.docs.forEach(item => {\n       const data = item.data();\n       const id = item.id;\n\n        if (id && data.text === task.text) {\n            // make delete request\n    \t\tdb.collection('tasks')\n    \t\t  .doc(id)\n\t\t\t  .delete()\n\t\t\t  .then(() => {\n       \t\t\tconsole.log('Task deleted successfully!');\n     \t\t}).catch((error) => {\n       \t\t\tconsole.error('Error removing task: ', error);\n    \t\t});\n\n        \t//update state of tasks\n\t\t\tsetTasks(tasks.filter((task) => task.text !== data.text))\n        \t}\t \n    \t})\n  \t})\n  }\n\n  // Toggle Reminder\n  const toggleReminder = (task) => {\n    db.collection('tasks').get().then((x) => {\n        x.docs.forEach(item => {\n         const data = item.data();\n         const id = item.id;\n\n          if (id && data.text === task.text) {\n            const currentTask = data;\n\n            //update the task in firestore\n            db.collection('tasks').doc(id).update({isComplete: !currentTask.isComplete});\n          \n            //update state of tasks\n            setTasks(tasks\n            \t.map(task => task.text === data.text ? { ...task, isComplete: !currentTask.isComplete } : task))\n          } \n      })\n    }).catch((error) => console.log(\"Error getting task:\", error));\n  }\n  /** End Server Calls */\n\n  return (\n    <Router>\n       <div className=\"container\">\n      <Header \n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}/>\n\n        <Route \n          path='/react-task-tracker/' \n          exact render={(props) => (\n        <>\n          {showAddTask && <AddTask onAdd={addTask}/>}\n     \n          {tasks.length > 0 ? \n            <Tasks \n              tasks={tasks} \n              onToggle={toggleReminder} \n              onDelete={deleteTask}/> : \n              'No Tasks Available'}\n          </>)\n        } />\n          \n        <Route path='/react-task-tracker/about' component={About}/>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}