{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","reps","Tasks","tasks","map","index","AddTask","useState","setText","setReps","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","Date","getFullYear","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updatedTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f5d8e16.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Button = ({ color, text, onClick }) => {\n\n  return (\n    <button onClick={onClick} style={{ backgroundColor: color }} className=\"btn\">\n      {text}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  color: \"steelblue\",\n};\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n  };\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nimport Button from './Button';\n\nconst Header = ({title, onAdd, showAdd }) => {\n  const location = useLocation();\n\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n\n            {location.pathname === '/' &&\n               <Button \n                color={showAdd ? 'crimson' : '#009957'} \n                text={showAdd ? 'Close' : 'Add'} \n                onClick={onAdd} />\n            }\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Exercise Tasks',\n  }\n  \n  Header.propTypes = {\n    title: PropTypes.string.isRequired,\n  }\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa';\n\nconst Task = ({task, onDelete, onToggle }) => {\n    return (\n        <div \n            className={`task ${task.reminder ? 'reminder' : ''}`} \n            onDoubleClick={() => onToggle(task.id)}\n        >\n            <h3>\n                {task.text} \n                <FaTimes \n                    style={{ color: 'red', cursor: 'pointer'}} \n                    onClick={() => onDelete(task.id)}\n                />\n            </h3>\n            <p>{task.reps}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task';\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n   \n  return (\n    <>\n        {tasks.map((task, index) => (\n            <Task \n                key={index} \n                task={task} \n                onDelete={onDelete}\n                onToggle={onToggle}\n            />\n        ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import { useState } from 'react';\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('');\n    const [reps, setReps] = useState('');\n    const [reminder, setReminder] = useState(false);\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if(!text) {\n            alert('Please add task');\n            return;\n        }\n\n        onAdd({ text, reps, reminder});\n\n        setText('');\n        setReps('');\n        setReminder(false);\n    }\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input \n                    type='text' \n                    placeholder='Add Task' \n                    value={text}\n                    onChange={(e) => setText(e.target.value)}/>\n            </div>\n            <div className='form-control'>\n                <label>Reps & Sets (Ex: 3x15)</label>\n                <input \n                    type='text' \n                    placeholder='Add Reps' \n                    value={reps}\n                    onChange={(e) => setReps(e.target.value)}/>\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input \n                    type='checkbox'\n                    checked={reminder} \n                    value={reminder}\n                    onChange={(e) => setReminder(e.currentTarget.checked)}/>\n            </div>\n\n            <input \n                type='submit' \n                value='Save Task' \n                className='btn btn-block'/>\n        </form>\n    )\n}\n\nexport default AddTask\n","import { Link } from 'react-router-dom';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p>Copyright &copy; {new Date().getFullYear()} - Valeria Castillo</p>\n            <Link to=\"/about\">About</Link>\n        </footer>\n    )\n}\n\nexport default Footer\n","import { Link } from 'react-router-dom';\n\nconst About = () => {\n    return (\n        <div>\n            <h4>Version 1.0.0</h4>\n            <Link to=\"/\">Go Back</Link>\n        </div>\n    )\n}\n\nexport default About\n","import { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  // initial load\n  useEffect(() => {\n   const getTasks = async () => {\n     const tasksFromServer = await fetchTasks();\n     setTasks(tasksFromServer);\n   }\n\n    getTasks();\n  }, []);\n\n  /** Server Calls */\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n\n    return data;\n  };\n\n    // Fetch Task\n    const fetchTask = async (id) => {\n      const res = await fetch(`http://localhost:5000/tasks/${id}`);\n      const data = await res.json();\n  \n      return data;\n    };\n\n  // Add Task\n  const addTask = async (task) => {\n  const res = await fetch(`http://localhost:5000/tasks`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task)\n    });\n\n    const data = await res.json();\n\n    setTasks([...tasks, data]);\n  }\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    // make delete request\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updatedTask = { ...taskToToggle,\n      reminder: !taskToToggle.toggleReminder};\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updatedTask)\n    });\n\n    const data = await res.json();\n\n    setTasks(tasks\n      .map((task) => task.id === id ? \n        { ...task, reminder: data.reminder} : task))\n  }\n  /** End Server Calls */\n\n  return (\n    <Router>\n       <div className=\"container\">\n      <Header \n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}/>\n\n        <Route path='/' exact render={(props) => (<>\n         {showAddTask && <AddTask onAdd={addTask}/>}\n     \n        {tasks.length > 0 ? \n          <Tasks \n            tasks={tasks} \n            onToggle={toggleReminder} \n            onDelete={deleteTask}/> : \n            'No Tasks Available'}\n          </>)} />\n          \n        <Route path='/about' component={About}/>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}