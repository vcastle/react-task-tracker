{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","reps","Tasks","tasks","map","index","AddTask","useState","setText","setReps","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAEMA,EAAS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAE7B,OACE,wBAAQA,QAASA,EAASC,MAAO,CAAEC,gBAAiBJ,GAASK,UAAU,MAAvE,SACGJ,KAKPF,EAAOO,aAAe,CACpBN,MAAO,aASMD,QClBTQ,EAAS,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC3B,OACI,yBAAQL,UAAU,SAAlB,UACI,6BAAKG,IACL,cAAC,EAAD,CACIR,MAAOU,EAAU,UAAY,UAC7BT,KAAMS,EAAU,QAAU,MAC1BR,QAASO,QAKzBF,EAAOD,aAAe,CAClBE,MAAO,kBAOID,Q,OCHAI,EAlBF,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC3B,OACI,sBACIT,UAAS,eAAUO,EAAKG,SAAW,WAAa,IAChDC,cAAe,kBAAMF,EAASF,EAAKK,KAFvC,UAII,+BACKL,EAAKX,KACN,cAAC,IAAD,CACIE,MAAO,CAAEH,MAAO,MAAOkB,OAAQ,WAC/BhB,QAAS,kBAAMW,EAASD,EAAKK,UAGrC,4BAAIL,EAAKO,WCGNC,EAhBD,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOR,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAE/B,OACE,mCACKO,EAAMC,KAAI,SAACV,EAAMW,GAAP,OACP,cAAC,EAAD,CAEIX,KAAMA,EACNC,SAAUA,EACVC,SAAUA,GAHLS,SC+CNC,EArDC,SAAC,GAAe,IAAbf,EAAY,EAAZA,MACf,EAAwBgB,mBAAS,IAAjC,mBAAOxB,EAAP,KAAayB,EAAb,KACA,EAAwBD,mBAAS,IAAjC,mBAAON,EAAP,KAAaQ,EAAb,KACA,EAAgCF,oBAAS,GAAzC,mBAAOV,EAAP,KAAiBa,EAAjB,KAeA,OACI,uBAAMvB,UAAU,WAAWwB,SAfd,SAACC,GACdA,EAAEC,iBAEE9B,GAKJQ,EAAM,CAAER,OAAMkB,OAAMJ,aAEpBW,EAAQ,IACRC,EAAQ,IACRC,GAAY,IARRI,MAAM,oBAWV,UACI,sBAAK3B,UAAU,eAAf,UACI,yCACA,uBACI4B,KAAK,OACLC,YAAY,WACZC,MAAOlC,EACPmC,SAAU,SAACN,GAAD,OAAOJ,EAAQI,EAAEO,OAAOF,aAE1C,sBAAK9B,UAAU,eAAf,UACI,2DACA,uBACI4B,KAAK,OACLC,YAAY,WACZC,MAAOhB,EACPiB,SAAU,SAACN,GAAD,OAAOH,EAAQG,EAAEO,OAAOF,aAE1C,sBAAK9B,UAAU,kCAAf,UACI,iDACA,uBACI4B,KAAK,WACLK,QAASvB,EACToB,MAAOpB,EACPqB,SAAU,SAACN,GAAD,OAAOF,EAAYE,EAAES,cAAcD,eAGrD,uBACIL,KAAK,SACLE,MAAM,YACN9B,UAAU,sBCgBXmC,MA7Df,WACE,MAAsCf,oBAAS,GAA/C,mBAAOgB,EAAP,KAAoBC,EAApB,KACA,EAA0BjB,mBAAS,CACjC,CACER,GAAI,EACJhB,KAAM,iBACNkB,KAAM,SACNJ,UAAU,GAEZ,CACEE,GAAI,EACJhB,KAAM,iBACNkB,KAAM,SACNJ,UAAU,GAEZ,CACEE,GAAI,EACJhB,KAAM,0BACNkB,KAAM,SACNJ,UAAU,KAjBd,mBAAOM,EAAP,KAAcsB,EAAd,KAyCA,OACE,sBAAKtC,UAAU,YAAf,UACE,cAAC,EAAD,CACEI,MAAO,kBAAMiC,GAAgBD,IAC7B/B,QAAS+B,IAEVA,GAAe,cAAC,EAAD,CAAShC,MAzBb,SAACG,GACf,IAAMK,EAAK2B,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,EACzCC,EAAO,aAAK9B,MAAOL,GAEzB+B,EAAS,GAAD,mBAAKtB,GAAL,CAAY0B,QAuBjB1B,EAAM2B,OAAS,EACd,cAAC,EAAD,CACE3B,MAAOA,EACPP,SAjBe,SAACG,GACtB0B,EAAStB,EACNC,KAAI,SAACV,GAAD,OAAUA,EAAKK,KAAOA,EAAZ,2BACRL,GADQ,IACFG,UAAWH,EAAKG,WAAYH,OAerCC,SAvBW,SAACI,GAClB0B,EAAStB,EAAM4B,QAAO,SAACrC,GAAD,OAAUA,EAAKK,KAAOA,SAuBtC,yBCjDKiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9cacda8f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Button = ({ color, text, onClick }) => {\n\n  return (\n    <button onClick={onClick} style={{ backgroundColor: color }} className=\"btn\">\n      {text}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  color: \"steelblue\",\n};\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n  };\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport Button from './Button';\n\nconst Header = ({title, onAdd, showAdd }) => {\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            <Button \n                color={showAdd ? 'crimson' : '#009957'} \n                text={showAdd ? 'Close' : 'Add'} \n                onClick={onAdd} />\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Exercise Tasks',\n  }\n  \n  Header.propTypes = {\n    title: PropTypes.string.isRequired,\n  }\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa';\n\nconst Task = ({task, onDelete, onToggle }) => {\n    return (\n        <div \n            className={`task ${task.reminder ? 'reminder' : ''}`} \n            onDoubleClick={() => onToggle(task.id)}\n        >\n            <h3>\n                {task.text} \n                <FaTimes \n                    style={{ color: 'red', cursor: 'pointer'}} \n                    onClick={() => onDelete(task.id)}\n                />\n            </h3>\n            <p>{task.reps}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task';\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n   \n  return (\n    <>\n        {tasks.map((task, index) => (\n            <Task \n                key={index} \n                task={task} \n                onDelete={onDelete}\n                onToggle={onToggle}\n            />\n        ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import { useState } from 'react';\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('');\n    const [reps, setReps] = useState('');\n    const [reminder, setReminder] = useState(false);\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if(!text) {\n            alert('Please add task');\n            return;\n        }\n\n        onAdd({ text, reps, reminder});\n\n        setText('');\n        setReps('');\n        setReminder(false);\n    }\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input \n                    type='text' \n                    placeholder='Add Task' \n                    value={text}\n                    onChange={(e) => setText(e.target.value)}/>\n            </div>\n            <div className='form-control'>\n                <label>Reps & Sets (Ex: 3x15)</label>\n                <input \n                    type='text' \n                    placeholder='Add Reps' \n                    value={reps}\n                    onChange={(e) => setReps(e.target.value)}/>\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input \n                    type='checkbox'\n                    checked={reminder} \n                    value={reminder}\n                    onChange={(e) => setReminder(e.currentTarget.checked)}/>\n            </div>\n\n            <input \n                type='submit' \n                value='Save Task' \n                className='btn btn-block'/>\n        </form>\n    )\n}\n\nexport default AddTask\n","import { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Skull Crushers\",\n      reps: \"3 x 15\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: \"BB Bicep Curls\",\n      reps: \"4 x 12\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"Wide Grip Lat Pulldowns\",\n      reps: \"3 x 15\",\n      reminder: false,\n    },\n  ]);\n\n  // Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n\n    setTasks([...tasks, newTask]);\n  }\n\n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks\n      .map((task) => task.id === id ? \n        { ...task, reminder: !task.reminder} : task))\n  }\n\n  return (\n    <div className=\"container\">\n      <Header \n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}/>\n\n      {showAddTask && <AddTask onAdd={addTask}/>}\n     \n      {tasks.length > 0 ? \n        <Tasks \n          tasks={tasks} \n          onToggle={toggleReminder} \n          onDelete={deleteTask}/> : \n          'No Tasks Available'}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}